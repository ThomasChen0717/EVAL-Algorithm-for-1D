# EVAL Algorithm for 1D

## Prerequisites
Make sure you have the following installed on your system:
- julia 
- make
- zip (command-line tool)

### julia
julia can be installed by following the guide on the [Julia website](https://julialang.org/downloads/), or simply by typing the following into the terminal:
- Unix-Like System: `curl -fsSL https://install.julialang.org | sh`
- Windows: `winget install julia -s msstore`

This installs [Juliaup installation manager](https://github.com/JuliaLang/juliaup), which will automatically install julia and keep it up to date. To install different versions of julia, use `juliaup --help`

Juliaup does not directly install the command "julia", instead, it provides a executable called "julialauncher" which will run julia programs using the specified julia version in the juliaup installation manager. 

If julia is installed directly on your computer, replace "JULIA = julialauncher" with "JULIA = julia" in the Makefile. 

### make and zip
Both of these are command line tools and some systems comes with them and some doesn't. You can install them using your package manager:
- On Unix-Like Systems: `sudo apt-get install make zip` (for Debian-based systems) or `sudo yum install make zip` (for Red Hat-based systems).
- On macOS: `brew install make zip`
- On Windows: Make is available via [GnuWin](http://gnuwin32.sourceforge.net/packages/make.htm), and zip is available via [Info-ZIP](http://infozip.sourceforge.net/).


## Makefile Targets
- "make run": Runs "make check_install" and Runs the Eval.jl
- "make zip": Runs "make clean" and compresses the files in the same directory to create EVAL.zip
- "make clean": Cleans the working directory(removing existing EVAL.zip and extracted folder EVAL)
- "make check_install": Runs check_dep.jl and installs any dependencies needed

### Default Target
The default target runs the Eval program, i.e. running "make" is the same as running "make run"

## Files
This project contains the following files:
- check_dep.jl: This is the julia program that checks for any missing dependencies required for running Eval.jl and installs them if needed. 
- Eval.jl: This is the main program that implements the logic for the EVAL algorithm for root finding in 1D
- Makefile: This is the Makefile specifying targets for the make command 
- polynomials.txt: This is the file that stores the input that Eval.jl takes from. 
  - Each line is a list of numbers separated by commas, which represents an polynomial by its coefficients from the largest degree to the smallest degree term. The following two terms represent the initial interval of the EVAL program. The last term is optional, and is used for including description of the polynomial. 
    - For example, if a line is written like this: "1, -1, 0, -5, 5", then it means the polynomial is x^2 - x - 0 with initial interval [-5, 5]. 
    - The same line with description may look something like this: "1, -1, 0, -5, 5, example polynomial. 
  - Ignores empty lines and lines starting with "#"
- README: This file. 
- Feel free to add more input files for your own testing, but remember to change the argument in order to run the program on your desired input file. See [Usage](#Usage)

## Usage
To run the program, use the following commands:

- To run the Julia program with default argument(polynomial.txt):
  ```sh
  make run
- To run the Julia program with additional arguments: 
  ```sh
  make run ARGS="Your_file_name1.txt Your_file_name2.txt..."
